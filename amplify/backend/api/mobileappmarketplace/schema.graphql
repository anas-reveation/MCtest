# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type User @model {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  created_tests: [TestManager] @hasMany(indexName: "byUser", fields: ["id"])
  purchased_tests: [PurchasedTest] @hasMany(indexName: "byUser", fields: ["id"])
  attempted_tests: [AttemptedTest] @hasMany(indexName: "byUser", fields: ["id"])
}

type TestManager @model {
  id: ID!
  user_id: ID! @index(name: "byUser")
  created_by: User @hasOne(fields: ["user_id"])
  category_id: ID!
  category: Category @hasOne(fields: ["category_id"])
  title: String!
  description: String!
  price: Int!
  time_limit: Int!
  questions: [Question] @hasMany(indexName: "byTest", fields: ["id"])
}

type Question @model {
  id: ID!
  marks: Int!
  test_id: ID! @index(name: "byTest")
  test: TestManager @hasOne(fields: ["test_id"])
  question: String!
  answer: String!
  explainantion: String!
  options: AWSJSON!
}

type Category @model {
  id: ID!
  name: String!
}

type PurchasedTest @model {
  id: ID!
  user_id: ID! @index(name: "byUser")
  test_id: ID!
  purchased_by: User @hasOne(fields: ["user_id"])
  test: TestManager @hasOne(fields: ["test_id"])
}

type AttemptedTest @model {
  id: ID!
  user_id: ID! @index(name: "byUser")
  attempted_by: User @hasOne(fields: ["user_id"])
  test_id: ID!
  test: TestManager @hasOne(fields: ["test_id"])
  status: AttemptStatus!
  result: [Result] @hasMany(indexName: "byAttemptedTest", fields: ["id"])
}

type Result @model {
  id: ID!
  attempted_id: ID! @index(name: "byAttemptedTest")
  question_id: ID!
  question: Question @hasOne(fields: ["question_id"])
  user_input: String!
  result_status: Boolean
}

enum AttemptStatus {
  ABANDONED
  ATTEMPTED
  IN_PROGRESS
}
